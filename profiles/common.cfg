#
# Main buildout configuration
#

[buildout]
extends = versions.cfg

# Enable for the real "offline" mode installation
#install-from-cache = true

# By default don't check for update eggs
newest = false

# Force unzipping installed eggs
unzip = true

# Separate from system
allowed-eggs-from-site-packages = false

# Hard-coded eggs versions to install
versions = versions

# Activate this if you want to use a cache dir, you will have to create the dir
download-cache = ${buildout:directory}/downloads

eggs =
    django                  # ...
    South                   # Django migrations
    django-model-utils      # Handles common patterns like TimeStampedModel
    django-extensions       # Add more management commands
    coverage                # Coverage.py measures code coverage, typically during test execution
    django-discover-runner  # A Django test runner based on unittest2 test discovery
    psycopg2                # postgresql db driver
    gunicorn                # WSGI server for out application
    watchdog                # We use it to reload gunicorn in production-like dev environment
    djangorestframework
    django-github-hook
    django-shop
    Pillow
    django-registration
    django-contact-form
    django-debug-toolbar
    django-colorfield
    simplejson
    django-stripe-payments

extra-paths =
    ${buildout:directory}/djangoroot

parts =
    env
    clean-src
    make-dirs
    reset-env
    reset-pyc
    django-setup
    django-configure
    nginx
    nginx-conf
    nginx-ssl-cert
    nginx-ssl-key
    supervisor

[project-env]

# Database connection
#
# DB connection settings
#
db-host =
db-port =
db-user =
db-pass =
db-name =

# Django specifics
django-debug = False
django-secret = sd-2a9s2df242as-df-#a-42y-z+hhi+71ge9bq=9@bz(!=d)expfk7w&t9#59i0!6e&

# Web/App server settings
port-http = 8080
port-https = 8443
port-supervisor = 9100
backend-addr = 127.0.0.1:8000
host = 127.0.0.1
ssl-cert = -----BEGIN CERTIFICATE-----
    MIIFMDCCBBigAwIBAgIIMiZu6Oj3lP4wDQYJKoZIhvcNAQELBQAwgbQxCzAJBgNV
    BAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQHEwpTY290dHNkYWxlMRow
    GAYDVQQKExFHb0RhZGR5LmNvbSwgSW5jLjEtMCsGA1UECxMkaHR0cDovL2NlcnRz
    LmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvMTMwMQYDVQQDEypHbyBEYWRkeSBTZWN1
    cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwHhcNMTUwMjA1MDI0MzM4WhcN
    MTUwNTE1MDg0MTA0WjA+MSEwHwYDVQQLExhEb21haW4gQ29udHJvbCBWYWxpZGF0
    ZWQxGTAXBgNVBAMTEG1hcmNob3Jvd2l0ei5uZXQwggEiMA0GCSqGSIb3DQEBAQUA
    A4IBDwAwggEKAoIBAQDp8CWAwfcRVjp1HMSM16la6WkPL2GVbQnDWonQ+kpOACkU
    WzNKjil0bzOBU70Mept5RAS0BI5g5OtNuatGGgPUYogWdvF+YaPa/7wQ3bwZLNDW
    jNEfsX59YUv82L1rEVjW63Eglo2g+so+8DGrZyJ22m5ftoeGYDgO7iQTrO79C1ql
    7U8T2jXrHl4Iezy8GOYRzilcLcwPD4uci/Idnse+0GHEyId+EbaQitmXIq+RU6G1
    VqhBniflvLDAFoy/Lp8f9pXkDM/dXHWazic88UDaYZfpg1OjFqS9B5UvS6MPfFgE
    n/Q8zdqP2K8q5wn4fZE1YC+xnkQ5jctJgnctdVt1AgMBAAGjggG5MIIBtTAMBgNV
    HRMBAf8EAjAAMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAOBgNVHQ8B
    Af8EBAMCBaAwNgYDVR0fBC8wLTAroCmgJ4YlaHR0cDovL2NybC5nb2RhZGR5LmNv
    bS9nZGlnMnMxLTg3LmNybDBTBgNVHSAETDBKMEgGC2CGSAGG/W0BBxcBMDkwNwYI
    KwYBBQUHAgEWK2h0dHA6Ly9jZXJ0aWZpY2F0ZXMuZ29kYWRkeS5jb20vcmVwb3Np
    dG9yeS8wdgYIKwYBBQUHAQEEajBoMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5n
    b2RhZGR5LmNvbS8wQAYIKwYBBQUHMAKGNGh0dHA6Ly9jZXJ0aWZpY2F0ZXMuZ29k
    YWRkeS5jb20vcmVwb3NpdG9yeS9nZGlnMi5jcnQwHwYDVR0jBBgwFoAUQMK9J47M
    NIMwojPX+2yz8LQsgM4wMQYDVR0RBCowKIIQbWFyY2hvcm93aXR6Lm5ldIIUd3d3
    Lm1hcmNob3Jvd2l0ei5uZXQwHQYDVR0OBBYEFEZpryCz9XrquEWTouqOKNRX+tPm
    MA0GCSqGSIb3DQEBCwUAA4IBAQAsEGMzG3IacXAnJt01dA5BlWWHR8W/4Uosn755
    uR0Z3fC6tgIg5mdpPrcdmDAi1DoEjE+3S0uXxmkNToLXvCk3WfV7Q1IUvPMu6+tI
    Tw3jJ9l11jQO/SeYR5sMYS1e8H9pga9aFKGq1LcXtOCKqgz2SzgRe0ReL0BCUXaC
    X0Gz7YDKK35O/yWk0xkQi15/+ns+aKRSO7UfhPzZhtX9FD+dWstxelWSmnLVANDd
    1iacNTFi06iKGwBmGE30RIPFpcUc7Reubt++JF0x6iBuxXX0N97dllzeZ2Dznros
    aK+qGzCCNkpKm5qJFEn6VLPvfkan7LRONBgadLTnNM5EbteI
    -----END CERTIFICATE-----

ssl-key = -----BEGIN PRIVATE KEY-----
    MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDp8CWAwfcRVjp1
    HMSM16la6WkPL2GVbQnDWonQ+kpOACkUWzNKjil0bzOBU70Mept5RAS0BI5g5OtN
    uatGGgPUYogWdvF+YaPa/7wQ3bwZLNDWjNEfsX59YUv82L1rEVjW63Eglo2g+so+
    8DGrZyJ22m5ftoeGYDgO7iQTrO79C1ql7U8T2jXrHl4Iezy8GOYRzilcLcwPD4uc
    i/Idnse+0GHEyId+EbaQitmXIq+RU6G1VqhBniflvLDAFoy/Lp8f9pXkDM/dXHWa
    zic88UDaYZfpg1OjFqS9B5UvS6MPfFgEn/Q8zdqP2K8q5wn4fZE1YC+xnkQ5jctJ
    gnctdVt1AgMBAAECggEAUTFyMsAfWjsNSvxTE3b+ZnlAZ27QdaZEjzLrRka4Z14S
    4+fLY4L3zFuUCrzfjmc3ct0yrLAwIl0RdgaM9WWuEpaoGPPrWSvWTPoZcdkjobE2
    QmDZbCCUgDu2vekTxQdeSCmrN95JBahFbZa8BntjMNEbIckePHtEuZnZl6Kbx+Lx
    AxcKVRN8JIsVaRG/BkGlXBUnUlFggGdVpEu8qzFZmPoAdNxa+6xiA9Tgs2XIVxSz
    A8DbX42OR0zyAxDH3v+lkDJVRL+SE37HzExuvQUP3cUiPET6omM1B0Jvjh/aS1A/
    imK0r05Q0JCwcQJvbNweVZCPxKPO3fpSWVeXD/mE+QKBgQD7JJKuy83FS8XE39rC
    zKtHdudN47VduuCXn16vU7PiqcK+/u3rSe/i9n/L9rXaFFP1DvIAuHYl50kD3q8A
    vNn9Q9C1oFH0Bj72HXqblwXwrEwyD13zXJaynqrOUtJvlJunVyCBb6NJGiceaDYt
    hPaQXdkm2HiG4yAwM/X5KspT/wKBgQDudmQtNjkhRrwuPLE458o6Tldjhg7rgaHA
    MunyX+AU1/eVPCeMmrE84EM7F7hEHM3cI8t3BfXy26Nyt0fGiUH3Me7Bo7kpSIfc
    9Yv3DAB2TTm0npKDpRYXJDLJmd/oMfxphKm1irUFwZQcnXkOKPsvAynJEMAjMf6V
    42X/G2ZAiwKBgA+jgmLSHBkqE8Gjsuqodg34MIUgJd4VUgD/EpVWYABAU/kyxLv/
    GaoHcYPQ9BgFZgj/ikBTPEA1+8z64+jm2ag0vd1hg1jvvqHyyfzAVcVb5U7EuDP8
    UwICcV5xt9rs5Rhxi3uj6QYXU9JH6P/CpNvujCQoHLFBmXKG+c0vRfQfAoGARsy7
    3XiV6b1YrdmzPJQFRN5xr8jjsSSh47C6KQ4yN74Pci2UCHj9WnezPl5ChWaP8GZo
    SIRqi5qOosar9tRV05DttGxp00oHnKEC12ymznkLQwc5tQBU2LYUpiqbghMlQCb1
    RENUj8rzsLNId93PBhxIUbw5b7muPs5vQBjgeRUCgYEAsYEg+vo3eD3WGDbChL6q
    f4SBAOupM5RHIXkAOavFEBYquRjkICWgjr4iqD+qRTkEAuBLSKF/baue5an/MtU/
    YQve9MotpDPqqdHG9sFPEtoXsOPi+l5Ao4wNnUe6WLVzVvsXnsGCF6KfyoypW0nJ
    2Dkv1RQZYR8qwA7wFe1FNF8=
    -----END PRIVATE KEY-----

[random-string]
recipe = mr.scripty
value =
    ... import random
    ... import string
    ... return ''.join(random.choice(string.ascii_letters + string.digits) for x in range(60))

[env]
recipe = gocept.recipe.env

[clean-src]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    find ${buildout:directory}/djangoroot -name '*.pyc' | xargs rm -f

[clean-dirs]
recipe = iw.recipe.cmd
on_install = true
on_update = false
cmds =
    rm -rf ${buildout:directory}/var/nginx/client-body-temp
    rm -rf ${buildout:directory}/var/nginx/proxy-temp
    rm -rf ${buildout:directory}/var/nginx/fastcgi-temp
    rm -rf ${buildout:directory}/var/static

[make-dirs]
recipe = iw.recipe.cmd
depends = ${clean-dirs:cmds}
on_install = true
on_update = true
cmds =
    mkdir -p ${buildout:directory}/var/nginx/client-body-temp
    mkdir -p ${buildout:directory}/var/nginx/proxy-temp
    mkdir -p ${buildout:directory}/var/nginx/fastcgi-temp
    mkdir -p ${buildout:directory}/var/static

[reset-env]
recipe = collective.recipe.template
inline =
    #!/bin/bash -ex
    cd ${buildout:directory} && ${buildout:bin-directory}/reset-pyc.sh
    cd ${buildout:directory} && rm -rf bin .installed.cfg develop-eggs eggs etc parts *.sqlite var djangoroot/project/settings_local.py
output = ${buildout:bin-directory}/reset-env.sh
mode = 755

[reset-pyc]
recipe = collective.recipe.template
inline =
    #!/bin/bash -e
    find ${buildout:directory}/djangoroot -name '*.pyc' | xargs rm -f
    find ${buildout:directory}/djangoroot -name '*.pyo' | xargs rm -f
    exit 0
output = ${buildout:bin-directory}/reset-pyc.sh
mode = 755

[django-setup]
recipe = djangorecipe
project = project
projectegg = project
settings = settings
control-script = django
wsgi = true
fcgi = false

logfile = ${buildout:directory}/var/log/django.log
extra-paths =
    ${buildout:extra-paths}
eggs =
    ${buildout:eggs}

[django-configure]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/django/settings_local.py.in
output = ${buildout:directory}/djangoroot/project/settings_local.py

[django-link-static]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    ${buildout:bin-directory}/django collectstatic --verbosity=0 --noinput --link

[pcre-fix-configure]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    chmod a+x ${pcre:destination}/configure

[pcre]
recipe = hexagonit.recipe.download
url = http://garr.dl.sourceforge.net/project/pcre/pcre/8.32/pcre-8.32.tar.gz
strip-top-level-dir = true

[nginx]
recipe = zc.recipe.cmmi
depends = ${pcre-fix-configure:cmds}
url = http://nginx.org/download/nginx-1.2.6.tar.gz
configure-options =
    --with-pcre=${pcre:destination}
    --with-http_ssl_module
    --http-client-body-temp-path=${buildout:directory}/var/nginx/client-body-temp
    --http-proxy-temp-path=${buildout:directory}/var/nginx/proxy-temp
    --http-fastcgi-temp-path=${buildout:directory}/var/nginx/fastcgi-temp
    --prefix=${buildout:parts-directory}/nginx
    --conf-path=${buildout:directory}/etc/nginx/nginx.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --http-log-path=${buildout:directory}/var/log/nginx-access.log
    --pid-path=${buildout:directory}/var/run/nginx.pid
    --lock-path=${buildout:directory}/var/lock/nginx.lock

[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/nginx.conf.in
output = ${buildout:directory}/etc/nginx/nginx.conf

[nginx-ssl-cert]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/server.crt.in
output = ${buildout:directory}/etc/nginx/server.crt

[nginx-ssl-key]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/server.key.in
output = ${buildout:directory}/etc/nginx/server.key

[supervisor]
recipe = collective.recipe.supervisor
port = ${project-env:port-supervisor}
user = admin
password = admin.
pidfile = ${buildout:directory}/var/run/supervisord.pid
serverurl = http://${project-env:host}:${project-env:port-supervisor}
programs =
    0 nginx ${nginx:location}/sbin/nginx [ -c ${buildout:directory}/etc/nginx/nginx.conf ]
    1 backend ${buildout:bin-directory}/django [ run_gunicorn -w 2 -b ${project-env:backend-addr} ]
