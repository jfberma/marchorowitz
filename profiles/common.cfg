#
# Main buildout configuration k
#

[buildout]
extends = versions.cfg

# Enable for the real "offline" mode installation
#install-from-cache = true

# By default don't check for update eggs
newest = false

# Force unzipping installed eggs
unzip = true

# Separate from system
allowed-eggs-from-site-packages = false

# Hard-coded eggs versions to install
versions = versions

# Activate this if you want to use a cache dir, you will have to create the dir
download-cache = ${buildout:directory}/downloads

eggs =
    django                  # ...
    South                   # Django migrations
    django-model-utils      # Handles common patterns like TimeStampedModel
    django-extensions       # Add more management commands
    coverage                # Coverage.py measures code coverage, typically during test execution
    django-discover-runner  # A Django test runner based on unittest2 test discovery
    psycopg2                # postgresql db driver
    gunicorn                # WSGI server for out application
    watchdog                # We use it to reload gunicorn in production-like dev environment
    djangorestframework
    django-github-hook
    django-shop
    Pillow
    django-registration
    django-contact-form
    django-debug-toolbar
    django-colorfield
    simplejson
    django-stripe-payments
    django-cron
    django-suit

extra-paths =
    ${buildout:directory}/djangoroot

parts =
    env
    clean-src
    make-dirs
    reset-env
    reset-pyc
    django-setup
    django-configure
    nginx
    nginx-conf
    nginx-ssl-cert
    nginx-ssl-key
    supervisor

[project-env]

# Database connection
#
# DB connection settings
#
db-host =
db-port =
db-user =
db-pass =
db-name =

# Django specifics
django-debug = False
django-secret = sd-2a9s2df242as-df-#a-42y-z+hhi+71ge9bq=9@bz(!=d)expfk7w&t9#59i0!6e&

# Web/App server settings
port-http = 8080
port-https = 8443
port-supervisor = 9100
backend-addr = 127.0.0.1:8000
host = 127.0.0.1
ssl-cert = -----BEGIN CERTIFICATE-----
    MIIE0DCCA7igAwIBAgIBBzANBgkqhkiG9w0BAQsFADCBgzELMAkGA1UEBhMCVVMx
    EDAOBgNVBAgTB0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoT
    EUdvRGFkZHkuY29tLCBJbmMuMTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRp
    ZmljYXRlIEF1dGhvcml0eSAtIEcyMB4XDTExMDUwMzA3MDAwMFoXDTMxMDUwMzA3
    MDAwMFowgbQxCzAJBgNVBAYTAlVTMRAwDgYDVQQIEwdBcml6b25hMRMwEQYDVQQH
    EwpTY290dHNkYWxlMRowGAYDVQQKExFHb0RhZGR5LmNvbSwgSW5jLjEtMCsGA1UE
    CxMkaHR0cDovL2NlcnRzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkvMTMwMQYDVQQD
    EypHbyBEYWRkeSBTZWN1cmUgQ2VydGlmaWNhdGUgQXV0aG9yaXR5IC0gRzIwggEi
    MA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC54MsQ1K92vdSTYuswZLiBCGzD
    BNliF44v/z5lz4/OYuY8UhzaFkVLVat4a2ODYpDOD2lsmcgaFItMzEUz6ojcnqOv
    K/6AYZ15V8TPLvQ/MDxdR/yaFrzDN5ZBUY4RS1T4KL7QjL7wMDge87Am+GZHY23e
    cSZHjzhHU9FGHbTj3ADqRay9vHHZqm8A29vNMDp5T19MR/gd71vCxJ1gO7GyQ5HY
    pDNO6rPWJ0+tJYqlxvTV0KaudAVkV4i1RFXULSo6Pvi4vekyCgKUZMQWOlDxSq7n
    eTOvDCAHf+jfBDnCaQJsY1L6d8EbyHSHyLmTGFBUNUtpTrw700kuH9zB0lL7AgMB
    AAGjggEaMIIBFjAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBBjAdBgNV
    HQ4EFgQUQMK9J47MNIMwojPX+2yz8LQsgM4wHwYDVR0jBBgwFoAUOpqFBxBnKLbv
    9r0FQW4gwZTaD94wNAYIKwYBBQUHAQEEKDAmMCQGCCsGAQUFBzABhhhodHRwOi8v
    b2NzcC5nb2RhZGR5LmNvbS8wNQYDVR0fBC4wLDAqoCigJoYkaHR0cDovL2NybC5n
    b2RhZGR5LmNvbS9nZHJvb3QtZzIuY3JsMEYGA1UdIAQ/MD0wOwYEVR0gADAzMDEG
    CCsGAQUFBwIBFiVodHRwczovL2NlcnRzLmdvZGFkZHkuY29tL3JlcG9zaXRvcnkv
    MA0GCSqGSIb3DQEBCwUAA4IBAQAIfmyTEMg4uJapkEv/oV9PBO9sPpyIBslQj6Zz
    91cxG7685C/b+LrTW+C05+Z5Yg4MotdqY3MxtfWoSKQ7CC2iXZDXtHwlTxFWMMS2
    RJ17LJ3lXubvDGGqv+QqG+6EnriDfcFDzkSnE3ANkR/0yBOtg2DZ2HKocyQetawi
    DsoXiWJYRBuriSUBAA/NxBti21G00w9RKpv0vHP8ds42pM3Z2Czqrpv1KrKQ0U11
    GIo/ikGQI31bS/6kA1ibRrLDYGCD+H1QQc7CoZDDu+8CL9IVVO5EFdkKrqeKM+2x
    LXY2JtwE65/3YR8V3Idv7kaWKK2hJn0KCacuBKONvPi8BDAB
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIEfTCCA2WgAwIBAgIDG+cVMA0GCSqGSIb3DQEBCwUAMGMxCzAJBgNVBAYTAlVT
    MSEwHwYDVQQKExhUaGUgR28gRGFkZHkgR3JvdXAsIEluYy4xMTAvBgNVBAsTKEdv
    IERhZGR5IENsYXNzIDIgQ2VydGlmaWNhdGlvbiBBdXRob3JpdHkwHhcNMTQwMTAx
    MDcwMDAwWhcNMzEwNTMwMDcwMDAwWjCBgzELMAkGA1UEBhMCVVMxEDAOBgNVBAgT
    B0FyaXpvbmExEzARBgNVBAcTClNjb3R0c2RhbGUxGjAYBgNVBAoTEUdvRGFkZHku
    Y29tLCBJbmMuMTEwLwYDVQQDEyhHbyBEYWRkeSBSb290IENlcnRpZmljYXRlIEF1
    dGhvcml0eSAtIEcyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAv3Fi
    CPH6WTT3G8kYo/eASVjpIoMTpsUgQwE7hPHmhUmfJ+r2hBtOoLTbcJjHMgGxBT4H
    Tu70+k8vWTAi56sZVmvigAf88xZ1gDlRe+X5NbZ0TqmNghPktj+pA4P6or6KFWp/
    3gvDthkUBcrqw6gElDtGfDIN8wBmIsiNaW02jBEYt9OyHGC0OPoCjM7T3UYH3go+
    6118yHz7sCtTpJJiaVElBWEaRIGMLKlDliPfrDqBmg4pxRyp6V0etp6eMAo5zvGI
    gPtLXcwy7IViQyU0AlYnAZG0O3AqP26x6JyIAX2f1PnbU21gnb8s51iruF9G/M7E
    GwM8CetJMVxpRrPgRwIDAQABo4IBFzCCARMwDwYDVR0TAQH/BAUwAwEB/zAOBgNV
    HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFDqahQcQZyi27/a9BUFuIMGU2g/eMB8GA1Ud
    IwQYMBaAFNLEsNKR1EwRcbNhyz2h/t2oatTjMDQGCCsGAQUFBwEBBCgwJjAkBggr
    BgEFBQcwAYYYaHR0cDovL29jc3AuZ29kYWRkeS5jb20vMDIGA1UdHwQrMCkwJ6Al
    oCOGIWh0dHA6Ly9jcmwuZ29kYWRkeS5jb20vZ2Ryb290LmNybDBGBgNVHSAEPzA9
    MDsGBFUdIAAwMzAxBggrBgEFBQcCARYlaHR0cHM6Ly9jZXJ0cy5nb2RhZGR5LmNv
    bS9yZXBvc2l0b3J5LzANBgkqhkiG9w0BAQsFAAOCAQEAWQtTvZKGEacke+1bMc8d
    H2xwxbhuvk679r6XUOEwf7ooXGKUwuN+M/f7QnaF25UcjCJYdQkMiGVnOQoWCcWg
    OJekxSOTP7QYpgEGRJHjp2kntFolfzq3Ms3dhP8qOCkzpN1nsoX+oYggHFCJyNwq
    9kIDN0zmiN/VryTyscPfzLXs4Jlet0lUIDyUGAzHHFIYSaRt4bNYC8nY7NmuHDKO
    KHAN4v6mF56ED71XcLNa6R+ghlO773z/aQvgSMO3kwvIClTErF0UZzdsyqUvMQg3
    qm5vjLyb4lddJIGvl5echK1srDdMZvNhkREg5L4wn3qkKQmw4TRfZHcYQFHfjDCm
    rw==
    -----END CERTIFICATE-----
    -----BEGIN CERTIFICATE-----
    MIIEADCCAuigAwIBAgIBADANBgkqhkiG9w0BAQUFADBjMQswCQYDVQQGEwJVUzEh
    MB8GA1UEChMYVGhlIEdvIERhZGR5IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBE
    YWRkeSBDbGFzcyAyIENlcnRpZmljYXRpb24gQXV0aG9yaXR5MB4XDTA0MDYyOTE3
    MDYyMFoXDTM0MDYyOTE3MDYyMFowYzELMAkGA1UEBhMCVVMxITAfBgNVBAoTGFRo
    ZSBHbyBEYWRkeSBHcm91cCwgSW5jLjExMC8GA1UECxMoR28gRGFkZHkgQ2xhc3Mg
    MiBDZXJ0aWZpY2F0aW9uIEF1dGhvcml0eTCCASAwDQYJKoZIhvcNAQEBBQADggEN
    ADCCAQgCggEBAN6d1+pXGEmhW+vXX0iG6r7d/+TvZxz0ZWizV3GgXne77ZtJ6XCA
    PVYYYwhv2vLM0D9/AlQiVBDYsoHUwHU9S3/Hd8M+eKsaA7Ugay9qK7HFiH7Eux6w
    wdhFJ2+qN1j3hybX2C32qRe3H3I2TqYXP2WYktsqbl2i/ojgC95/5Y0V4evLOtXi
    EqITLdiOr18SPaAIBQi2XKVlOARFmR6jYGB0xUGlcmIbYsUfb18aQr4CUWWoriMY
    avx4A6lNf4DD+qta/KFApMoZFv6yyO9ecw3ud72a9nmYvLEHZ6IVDd2gWMZEewo+
    YihfukEHU1jPEX44dMX4/7VpkI+EdOqXG68CAQOjgcAwgb0wHQYDVR0OBBYEFNLE
    sNKR1EwRcbNhyz2h/t2oatTjMIGNBgNVHSMEgYUwgYKAFNLEsNKR1EwRcbNhyz2h
    /t2oatTjoWekZTBjMQswCQYDVQQGEwJVUzEhMB8GA1UEChMYVGhlIEdvIERhZGR5
    IEdyb3VwLCBJbmMuMTEwLwYDVQQLEyhHbyBEYWRkeSBDbGFzcyAyIENlcnRpZmlj
    YXRpb24gQXV0aG9yaXR5ggEAMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQEFBQAD
    ggEBADJL87LKPpH8EsahB4yOd6AzBhRckB4Y9wimPQoZ+YeAEW5p5JYXMP80kWNy
    OO7MHAGjHZQopDH2esRU1/blMVgDoszOYtuURXO1v0XJJLXVggKtI3lpjbi2Tc7P
    TMozI+gciKqdi0FuFskg5YmezTvacPd+mSYgFFQlq25zheabIZ0KbIIOqPjCDPoQ
    HmyW74cNxA9hi63ugyuV+I6ShHI56yDqg+2DzZduCLzrTia2cyvk0/ZM/iZx4mER
    dEr/VxqHD3VILs9RaRegAhJhldXRQLIQTO7ErBBDpqWeCtWVYpoNz4iCxTIM5Cuf
    ReYNnyicsbkqWletNw+vHX/bvZ8=
    -----END CERTIFICATE-----

ssl-key = -----BEGIN PRIVATE KEY-----
    MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDQ7Pts20zCV0bS
    HGuRCylIC0uBSFcicdV+IS5AdxBc8Y3OxLVNd+A1NnqB/ik6ffUryCUBI6qIv3J1
    YUl5KVY1KoM8oakBCT3R+ra3CIM1fIwPrH8rExRmLyRP24Qz0w907cIh8zqH6eUJ
    rnq8uIBQpyEs4aXIkfbQqO79TJPFC2ZVD/Ai0fZLT8oqE227pal7i6JN/0CCC7DT
    AW3hgy/bt+uSzFc0m7OmChRL9DgEYTUcu+N0DtmS16PpCh4+1V9bXOdGswWJDdiC
    TptRj27t/fjh6sk/hRqD8OJ/piC0EnUt0g6F2Td0BsuJ0LhvLFG44G9uFedW6RXo
    xE3hJuSvAgMBAAECggEAIgsroP5PEK/WC3C0GmteK64jfIqEIEm6RxYzCjAci3iU
    6edlv5zT/PfGmJ4Iq85Qf/TaCsh8BlJj3TqgFU0mDf3CasPQ3SlbWHbpBQQvFS0Z
    SYiLJEK0pT3zRcv4S9WNhDkl1BBlLjZvqtcyisPprLq/DigqsncOZ8vPPZkXzxiU
    A9fzDM5NcnG7L3AI3x1bS3lVnaCVTFF5mBUa4NpE1Gv+iTKmasFssIlDfXex40i/
    kMjkzFbMV3ZnSO0i4i6E+2fJ4Oa+mbSC/Nys8dCBMO8sAM5a6CRJxLPCP4YqDBcQ
    OKacgl5hde8Qao+btt1If4weCT3Q0gq2w/WaTOM/sQKBgQDwetRKfDH0mERXScs4
    aldhp6+wfk3XZWgszddyo+uJhZApqjJKgZu142tSXUbkcizPi2StzzEWngq5Kddj
    5GPi7ZPVVpoqZ/MXzbw04PVJWBTUpTIoTQjOSC/4H0FfnB1ftdVH0DY2mTohq98r
    JAlMH/Qma+orayJmVBXrryh5eQKBgQDeaNIr7O1iEvQbzgKJk5uOsZZyYCUsrhuk
    lcvFcqO3JgXu/vCAvUOO9hb6WHZZeAL+VI9Wsjp+dhCrMD3IohY4OsECMg3K7+9G
    PvjQe0JP7yB4mJ9SI26o4vKWWM72Nca2yPhD/Th5f+hwY/KyLO6JsE4gRV5i0ccA
    iwLzmXHtZwKBgQDPB5/eJD/JqJElaLVY80wZGYkKdCJFrtrZv7iczHxJn7/17r1v
    IVfRZmGNvhn7MERdxU6+x+Il65elw1zYddZ8ljYwc2cz3NwOgSNnjsf9BaShUTr2
    MSPEm6cYgKgCTN+I930PXzRdGttOA66UcGjErbm+nicyjABIglmA1wIMWQKBgE+p
    l+4n1PcV9t2msn34ovU/YrXg/i+8xSX0iaJVZ5KISgPKyPYz1Gj2eFB/MxTkyZ2z
    SAwzloQJYfsPMnIUrITDdrKEnzAbNMcicxiprZzX9/d6I0bWbiKL93wmnyrNJDoA
    Tfx8TKgoSmdHRXzQXzhuL+2bKy2WGgN1xz7drVLtAoGBALxRtVuxPGQaRU5Epjyi
    amowB7rSDSANAsE3Bki2CAmsHQe3J0l9yazivkG6KbMe83kC0ZDRewfziTMej5aB
    +LWuKO0ykcYUwsxngAYGo3DpG4Gf0ya6iClecCNfnjYJsvWla9YZ7h+0rAO6ChGB
    KaweEtz9EDwt6wKrH0wNsgvb
    -----END PRIVATE KEY-----

[random-string]
recipe = mr.scripty
value =
    ... import random
    ... import string
    ... return ''.join(random.choice(string.ascii_letters + string.digits) for x in range(60))

[env]
recipe = gocept.recipe.env

[clean-src]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    find ${buildout:directory}/djangoroot -name '*.pyc' | xargs rm -f

[clean-dirs]
recipe = iw.recipe.cmd
on_install = true
on_update = false
cmds =
    rm -rf ${buildout:directory}/var/nginx/client-body-temp
    rm -rf ${buildout:directory}/var/nginx/proxy-temp
    rm -rf ${buildout:directory}/var/nginx/fastcgi-temp
    rm -rf ${buildout:directory}/var/static

[make-dirs]
recipe = iw.recipe.cmd
depends = ${clean-dirs:cmds}
on_install = true
on_update = true
cmds =
    mkdir -p ${buildout:directory}/var/nginx/client-body-temp
    mkdir -p ${buildout:directory}/var/nginx/proxy-temp
    mkdir -p ${buildout:directory}/var/nginx/fastcgi-temp
    mkdir -p ${buildout:directory}/var/static

[reset-env]
recipe = collective.recipe.template
inline =
    #!/bin/bash -ex
    cd ${buildout:directory} && ${buildout:bin-directory}/reset-pyc.sh
    cd ${buildout:directory} && rm -rf bin .installed.cfg develop-eggs eggs etc parts *.sqlite var djangoroot/project/settings_local.py
output = ${buildout:bin-directory}/reset-env.sh
mode = 755

[reset-pyc]
recipe = collective.recipe.template
inline =
    #!/bin/bash -e
    find ${buildout:directory}/djangoroot -name '*.pyc' | xargs rm -f
    find ${buildout:directory}/djangoroot -name '*.pyo' | xargs rm -f
    exit 0
output = ${buildout:bin-directory}/reset-pyc.sh
mode = 755

[django-setup]
recipe = djangorecipe
project = project
projectegg = project
settings = settings
control-script = django
wsgi = true
fcgi = false

logfile = ${buildout:directory}/var/log/django.log
extra-paths =
    ${buildout:extra-paths}
eggs =
    ${buildout:eggs}

[django-configure]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/django/settings_local.py.in
output = ${buildout:directory}/djangoroot/project/settings_local.py

[django-link-static]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    ${buildout:bin-directory}/django collectstatic --verbosity=0 --noinput --link

[pcre-fix-configure]
recipe = iw.recipe.cmd
on_install = true
on_update = true
cmds =
    chmod a+x ${pcre:destination}/configure

[pcre]
recipe = hexagonit.recipe.download
url = http://garr.dl.sourceforge.net/project/pcre/pcre/8.32/pcre-8.32.tar.gz
strip-top-level-dir = true

[nginx]
recipe = zc.recipe.cmmi
depends = ${pcre-fix-configure:cmds}
url = http://nginx.org/download/nginx-1.2.6.tar.gz
configure-options =
    --with-pcre=${pcre:destination}
    --with-http_ssl_module
    --http-client-body-temp-path=${buildout:directory}/var/nginx/client-body-temp
    --http-proxy-temp-path=${buildout:directory}/var/nginx/proxy-temp
    --http-fastcgi-temp-path=${buildout:directory}/var/nginx/fastcgi-temp
    --prefix=${buildout:parts-directory}/nginx
    --conf-path=${buildout:directory}/etc/nginx/nginx.conf
    --error-log-path=${buildout:directory}/var/log/nginx-error.log
    --http-log-path=${buildout:directory}/var/log/nginx-access.log
    --pid-path=${buildout:directory}/var/run/nginx.pid
    --lock-path=${buildout:directory}/var/lock/nginx.lock

[nginx-conf]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/nginx.conf.in
output = ${buildout:directory}/etc/nginx/nginx.conf

[nginx-ssl-cert]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/server.crt.in
output = ${buildout:directory}/etc/nginx/server.crt

[nginx-ssl-key]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/nginx/server.key.in
output = ${buildout:directory}/etc/nginx/server.key

[supervisor]
recipe = collective.recipe.supervisor
port = ${project-env:port-supervisor}
user = admin
password = admin.
pidfile = ${buildout:directory}/var/run/supervisord.pid
serverurl = http://${project-env:host}:${project-env:port-supervisor}
programs =
    0 nginx ${nginx:location}/sbin/nginx [ -c ${buildout:directory}/etc/nginx/nginx.conf ]
    1 backend ${buildout:bin-directory}/django [ run_gunicorn -w 2 -b ${project-env:backend-addr} ]
